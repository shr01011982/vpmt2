openapi: 3.0.1
info:
  title: User Auth Service API
  version: 1.0.0
  description: API for user registration, authentication, and user management

servers:
  - url: http://localhost:8083

paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
            example:
              username: alice
              password: alice123
              email: alice@example.com
              role: ADMIN
      responses:
        '200':
          description: User registered successfully

  /auth/login:
    post:
      summary: Authenticate user and return JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
            example:
              username: alice
              password: alice123
      responses:
        '200':
          description: JWT token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
              example:
                token: eyJhbGciOiJIUzI1NiJ9...

  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
              example:
                - id: 1
                  username: alice
                  email: alice@example.com
                  role: ADMIN

    post:
      summary: Add a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
      responses:
        '201':
          description: User created

  /users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

    put:
      summary: Update user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
      responses:
        '200':
          description: User updated

    delete:
      summary: Delete user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted

components:
  schemas:
    UserRegistrationRequest:
      type: object
      required:
        - username
        - password
        - email
        - role
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        role:
          type: string

    UserLoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    JwtResponse:
      type: object
      properties:
        token:
          type: string

    UserResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        role:
          type: string
