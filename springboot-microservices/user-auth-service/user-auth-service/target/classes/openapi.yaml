openapi: 3.0.1
info:
  description: "API for user registration, authentication, and user management"
  title: User Auth Service API
  version: 1.0.0
servers:
- url: http://localhost:8083
paths:
  /auth/register:
    post:
      requestBody:
        content:
          application/json:
            example:
              username: alice
              password: alice123
              email: alice@example.com
              role: ADMIN
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      responses:
        "200":
          description: User registered successfully
      summary: Register a new user
      x-content-type: application/json
      x-accepts:
      - application/json
  /auth/login:
    post:
      requestBody:
        content:
          application/json:
            example:
              username: alice
              password: alice123
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                token: eyJhbGciOiJIUzI1NiJ9...
              schema:
                $ref: '#/components/schemas/JwtResponse'
          description: JWT token response
      summary: Authenticate user and return JWT
      x-content-type: application/json
      x-accepts:
      - application/json
  /users:
    get:
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                username: alice
                email: alice@example.com
                role: ADMIN
              schema:
                items:
                  $ref: '#/components/schemas/UserResponse'
                type: array
          description: List of users
      summary: Get all users
      x-accepts:
      - application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      responses:
        "201":
          description: User created
      summary: Add a new user
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: User deleted
      summary: Delete user by ID
      x-accepts:
      - application/json
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: User found
      summary: Get user by ID
      x-accepts:
      - application/json
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      responses:
        "200":
          description: User updated
      summary: Update user by ID
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  schemas:
    UserRegistrationRequest:
      example:
        password: password
        role: role
        email: email
        username: username
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        role:
          type: string
      required:
      - email
      - password
      - role
      - username
      type: object
    UserLoginRequest:
      example:
        password: password
        username: username
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
      type: object
    JwtResponse:
      example:
        token: token
      properties:
        token:
          type: string
      type: object
    UserResponse:
      example:
        role: role
        id: 0
        email: email
        username: username
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        role:
          type: string
      type: object
